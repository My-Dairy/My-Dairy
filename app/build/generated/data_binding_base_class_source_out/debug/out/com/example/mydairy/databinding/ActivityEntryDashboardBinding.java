// Generated by view binder compiler. Do not edit!
package com.example.mydairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.mydairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEntryDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView card0;

  @NonNull
  public final CardView card1;

  @NonNull
  public final CardView card2;

  @NonNull
  public final CardView card3;

  @NonNull
  public final CardView card4;

  @NonNull
  public final CardView card5;

  @NonNull
  public final CardView card6;

  @NonNull
  public final CardView card7;

  @NonNull
  public final View divider;

  @NonNull
  public final Toolbar toolbar;

  private ActivityEntryDashboardBinding(@NonNull ConstraintLayout rootView, @NonNull CardView card0,
      @NonNull CardView card1, @NonNull CardView card2, @NonNull CardView card3,
      @NonNull CardView card4, @NonNull CardView card5, @NonNull CardView card6,
      @NonNull CardView card7, @NonNull View divider, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.card0 = card0;
    this.card1 = card1;
    this.card2 = card2;
    this.card3 = card3;
    this.card4 = card4;
    this.card5 = card5;
    this.card6 = card6;
    this.card7 = card7;
    this.divider = divider;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEntryDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEntryDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_entry_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEntryDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_0;
      CardView card0 = rootView.findViewById(id);
      if (card0 == null) {
        break missingId;
      }

      id = R.id.card_1;
      CardView card1 = rootView.findViewById(id);
      if (card1 == null) {
        break missingId;
      }

      id = R.id.card_2;
      CardView card2 = rootView.findViewById(id);
      if (card2 == null) {
        break missingId;
      }

      id = R.id.card_3;
      CardView card3 = rootView.findViewById(id);
      if (card3 == null) {
        break missingId;
      }

      id = R.id.card_4;
      CardView card4 = rootView.findViewById(id);
      if (card4 == null) {
        break missingId;
      }

      id = R.id.card_5;
      CardView card5 = rootView.findViewById(id);
      if (card5 == null) {
        break missingId;
      }

      id = R.id.card_6;
      CardView card6 = rootView.findViewById(id);
      if (card6 == null) {
        break missingId;
      }

      id = R.id.card_7;
      CardView card7 = rootView.findViewById(id);
      if (card7 == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = rootView.findViewById(id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityEntryDashboardBinding((ConstraintLayout) rootView, card0, card1, card2,
          card3, card4, card5, card6, card7, divider, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
