// Generated by view binder compiler. Do not edit!
package com.example.mydairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.mydairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TableLabourChargeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout dateBox;

  @NonNull
  public final TextView labourOtherWork;

  @NonNull
  public final TextView labourOtherWorkAmt;

  @NonNull
  public final TextView tableDate;

  @NonNull
  public final TextView tableDeposit;

  @NonNull
  public final TextView tableSalary;

  @NonNull
  public final TextView tableWithdraw;

  private TableLabourChargeBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout dateBox,
      @NonNull TextView labourOtherWork, @NonNull TextView labourOtherWorkAmt,
      @NonNull TextView tableDate, @NonNull TextView tableDeposit, @NonNull TextView tableSalary,
      @NonNull TextView tableWithdraw) {
    this.rootView = rootView;
    this.dateBox = dateBox;
    this.labourOtherWork = labourOtherWork;
    this.labourOtherWorkAmt = labourOtherWorkAmt;
    this.tableDate = tableDate;
    this.tableDeposit = tableDeposit;
    this.tableSalary = tableSalary;
    this.tableWithdraw = tableWithdraw;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TableLabourChargeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TableLabourChargeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.table_labour_charge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TableLabourChargeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_box;
      LinearLayout dateBox = rootView.findViewById(id);
      if (dateBox == null) {
        break missingId;
      }

      id = R.id.labour_other_work;
      TextView labourOtherWork = rootView.findViewById(id);
      if (labourOtherWork == null) {
        break missingId;
      }

      id = R.id.labour_other_work_amt;
      TextView labourOtherWorkAmt = rootView.findViewById(id);
      if (labourOtherWorkAmt == null) {
        break missingId;
      }

      id = R.id.table_date;
      TextView tableDate = rootView.findViewById(id);
      if (tableDate == null) {
        break missingId;
      }

      id = R.id.table_deposit;
      TextView tableDeposit = rootView.findViewById(id);
      if (tableDeposit == null) {
        break missingId;
      }

      id = R.id.table_salary;
      TextView tableSalary = rootView.findViewById(id);
      if (tableSalary == null) {
        break missingId;
      }

      id = R.id.table_withdraw;
      TextView tableWithdraw = rootView.findViewById(id);
      if (tableWithdraw == null) {
        break missingId;
      }

      return new TableLabourChargeBinding((FrameLayout) rootView, dateBox, labourOtherWork,
          labourOtherWorkAmt, tableDate, tableDeposit, tableSalary, tableWithdraw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
