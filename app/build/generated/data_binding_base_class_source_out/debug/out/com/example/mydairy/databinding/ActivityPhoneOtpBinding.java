// Generated by view binder compiler. Do not edit!
package com.example.mydairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.chaos.view.PinView;
import com.example.mydairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneOtpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final PinView otpBox;

  @NonNull
  public final Button proceedBtn;

  @NonNull
  public final TextView resendOtpTextview;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewEnterOtp;

  private ActivityPhoneOtpBinding(@NonNull ConstraintLayout rootView, @NonNull PinView otpBox,
      @NonNull Button proceedBtn, @NonNull TextView resendOtpTextview,
      @NonNull TextView textViewDescription, @NonNull TextView textViewEnterOtp) {
    this.rootView = rootView;
    this.otpBox = otpBox;
    this.proceedBtn = proceedBtn;
    this.resendOtpTextview = resendOtpTextview;
    this.textViewDescription = textViewDescription;
    this.textViewEnterOtp = textViewEnterOtp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.otp_box;
      PinView otpBox = rootView.findViewById(id);
      if (otpBox == null) {
        break missingId;
      }

      id = R.id.proceed_btn;
      Button proceedBtn = rootView.findViewById(id);
      if (proceedBtn == null) {
        break missingId;
      }

      id = R.id.resend_otp_textview;
      TextView resendOtpTextview = rootView.findViewById(id);
      if (resendOtpTextview == null) {
        break missingId;
      }

      id = R.id.textView_description;
      TextView textViewDescription = rootView.findViewById(id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textView_enter_otp;
      TextView textViewEnterOtp = rootView.findViewById(id);
      if (textViewEnterOtp == null) {
        break missingId;
      }

      return new ActivityPhoneOtpBinding((ConstraintLayout) rootView, otpBox, proceedBtn,
          resendOtpTextview, textViewDescription, textViewEnterOtp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
